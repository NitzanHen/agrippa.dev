---
import Icon from './Icon.astro';
import { mdiLightbulbOutline, mdiApplicationBracesOutline, mdiExclamationThick, mdiCheckOutline, mdiHammer, mdiAccountHardHatOutline, mdiRocketLaunchOutline } from '@mdi/js';
import { capitalize } from '../utils';

export enum CalloutType {
	TIP = 'tip',
	EXAMPLE = 'example',
	WARNING = 'warning',
	SUCCESS = 'success',
	WIP = 'work-in-progress',
	ROCKET = 'rocket'
}

export interface Props {
	type: CalloutType;
}

const { type } = Astro.props;
const hasBody = Astro.slots.has('default');

const iconPaths: Record<CalloutType, string> = {
	[CalloutType.TIP]: mdiLightbulbOutline,
	[CalloutType.EXAMPLE]: mdiApplicationBracesOutline,
	[CalloutType.WARNING]: mdiExclamationThick,
	[CalloutType.SUCCESS]: mdiCheckOutline,
	[CalloutType.WIP]: mdiAccountHardHatOutline,
	[CalloutType.ROCKET]: mdiRocketLaunchOutline

};
const icon = iconPaths[type];
---

<style>
	.tip {
		--color: hsla(172, 100%, 37%, 1);
		--header-background: hsla(172, 100%, 37%, 0.2);
		--background-color: hsla(172, 100%, 37%, 0.05);
	}

	.example {
		--color: hsla(256, 100%, 65%, 1);
		--header-background: hsla(256, 100%, 65%, 0.2);
		--background-color: hsla(256, 100%, 65%, 0.05);
	}

	.warning {
		--color: hsla(46, 100%, 50%, 1);
		--header-background: hsla(46, 100%, 50%, 0.2);
		--background-color: hsla(46, 100%, 50%, 0.05);
	}

	.success {
		--color: hsla(145, 100%, 39%, 1);
		--header-background: hsla(145, 100%, 39%, 0.2);
		--background-color: hsla(145, 100%, 39%, 0.05);
	}

	.work-in-progress {
		--color: hsla(0, 5%, 50%, 1);
		--header-background: hsla(0, 5%, 50%, 0.2);
		--background-color: hsla(0, 5%, 50%, 0.05);
	}

	.rocket {
		--color: hsla(0, 5%, 50%, 1);
		--header-background: hsla(0, 5%, 50%, 0.2);
		--background-color: hsla(0, 5%, 50%, 0.05);
	}

	.root {
		border-radius: 0.5em;
		border-left: 0.5em solid var(--color);
		overflow: hidden;
	}

	.header { 
		background-color: var(--header-background);
		display: flex;
		gap: 0.75em;
		align-items: center;
		padding: 0.5em 0.75em;
		font-size: 1.1em; 
		font-weight: 600;
	}

	.header-main {
		flex: 1 0 0;
	}
	.header-icon {
		flex: 0 0 auto;
	}

	.body {
		background-color: var(--background-color);
		padding: 1em;
	}
</style>

<section class={`root ${type}`}>
	<div class="header">
		<div class="header-icon">
			<Icon path={icon} />
		</div>
		<div class="header-main">
			<slot name="header">
				{capitalize(type)}
			</slot>
		</div>
	</div>
	<div class:list={{ body: hasBody }}>
		<slot/>
	</div>
</section>